PHP ⏩

<pre>
<?php
require_once "Caneta.php";
$c1 = new Caneta;
$c1->modelo = "BIC cristal";
$c1->cor = "Azul";
//$c1->ponta = 0.5;
//$c1->carga = 99;
//$c1->tampada = true;
//$c1->destampar();
$c1->rabiscar();
print_r($c1);

?>
</pre>
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
<?php
class Caneta {
    public $modelo;
    public $cor;
    private $ponta;
    protected $carga;
    protected $tampada;

    public function rabiscar() {
        if ($this->tampada == true){
        echo "Não posso rabiscar!<br>";
        } else {
        echo "Estou rabiscando!<br>";
        }
}

    private function tampar() {
        $this->tampada = true;
        }

    private function destampar() {
        $this->tampada = false;
    }
}
?>

A tag </pre> modifica o formato
da vizualização.

⚪ Outpost ⚪

Estou rabiscando!
Caneta Object
(
    [modelo] => BIC cristal
    [cor] => Azul
    [ponta:Caneta:private] => 
    [carga:protected] => 
    [tampada:protected] => 
)

Obs: Ao tentar pecher nos atributos private,
e protected, ele não executa.
O mesmo ocorre com as funções.
Logo após foram colocadas as funções tampar()
e destampar() como public.
Mesmo que o atributo $tampada está como
protected a função reconhece como true ou false.
tampada:protected] => 1
